// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name LivenessFramework
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import Accelerate
import CoreML
import DeveloperToolsSupport
import Foundation
@_exported import LivenessFramework
import Swift
import SwiftUI
import UIKit
import VideoToolbox
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class LivenessImageManager {
  public init()
  public func saveImage(image: UIKit.UIImage, filename: Swift.String)
  public func loadImage(filename: Swift.String) -> UIKit.UIImage?
  @objc deinit
}
public protocol LivenessControllerDelegate : AnyObject {
  func sendBack(responseCode: Swift.Int, responseMessage: Swift.String, responseData: Swift.Double, imagePath: Swift.String)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency public class DetectionVC : UIKit.UIViewController, AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @_Concurrency.MainActor @preconcurrency public var imageUrl: Swift.String?
  @_Concurrency.MainActor @preconcurrency public var face_image: Swift.String
  @_Concurrency.MainActor @preconcurrency weak public var delegate: (any LivenessFramework.LivenessControllerDelegate)?
  @_Concurrency.MainActor @preconcurrency public var recognizeFrame: Swift.Int
  @_Concurrency.MainActor @preconcurrency public var notRecognizeFrame: Swift.Int
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency public func setBackArrowButton()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLayoutSubviews()
  @_Concurrency.MainActor @preconcurrency @objc public func captureOutput(_ output: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from connection: AVFoundation.AVCaptureConnection)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
